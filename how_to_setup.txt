Configuration AWS first time

# Update linux
sudo apt update

# Create new sudo user
sudo adduser simon
sudo usermod -aG sudo simon
su - simon

# Install shell utils
sudo apt-get install screen
sudo apt-get install zsh
sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
echo ":set number" > ~/.vimrc
# Manually change theme in ~/.zshrc from ‘robbyrussel’ to ‘af-magic’
mkdir Projects
cd Projects

# Install Tracker project
# Create ssh keys to push on GitHub without having to type in credentials
ssh-keygen
git clone git@github.com:zikmout/tracker_rework.git tracker
cd tracker
sudo apt install python3-pip
sudo pip3 install virtualenv
virtualenv ENV

# Install PostgreSQL
sudo apt-get install postgresql
sudo service postgresql status
sudo vi /etc/postgresql/10/main/postgresql.conf # change port to 8080
sudo service postgresql restart

# Install fastText (last version from GitHub)
source ~/Projects/tracker/ENV/bin/activate # Get in virtualenv
cd
git clone https://github.com/facebookresearch/fastText.git
cd fastText
sudo pip3 install .
cd
deactivate # Get out of virtualenv

# Install redis
sudo apt-get install redis-server
sudo service redis-server status

# Install rabbimq-server
wget -O- https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc | sudo apt-key add -
wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -
echo "deb https://dl.bintray.com/rabbitmq/debian $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/rabbitmq.list
sudo apt update

sudo apt -y install rabbitmq-server

# If there are packages with unmet dependencies (esl-erlang), follow these steps:
wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
sudo dpkg -i erlang-solutions_1.0_all.deb
sudo apt-get update
sudo apt-get install esl-erlang
sudo apt -y install rabbitmq-server
sudo service rabbitmq-server status

# Install firefox and pyvirtualdisplay (xvfb)
sudo apt-get install firefox xvfb

# Install geckodriver
# https://github.com/mozilla/geckodriver/releases
wget https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz
tar -xvzf geckodriver*
chmod +x geckodriver
sudo mv geckodriver /usr/local/bin/

# Install Nginx
sudo apt-get install nginx
sudo service nginx status

# Install SSL certificate (lets encrypt & certbot) and configure Nginx accordingly
sudo add-apt-repository ppa:certbot/certbot
sudo apt install python-certbot-nginx


sudo certbot --nginx -d tracker.lu -d www.tracker.lu # before this step ports 80, 443, 5567? must be open
sudo cat /etc/letsencrypt/live/tracker.lu/fullchain.pem
sudo cat /etc/letsencrypt/live/tracker.lu/privkey.pem
sudo certbot renew --dry-run

sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.old
sudo rm /etc/nginx/nginx.conf
sudo cp ~/Projects/tracker/tracker/config/ssl/nginx.conf /etc/nginx/
sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.old
sudo rm /etc/nginx/sites-available/default
sudo cp ~/Projects/tracker/tracker/config/ssl/default /etc/nginx/sites-available/

sudo service nginx -t
sudo service nginx restart


# Install tracker dependencies
cd Projects/tracker
source ENV/bin/activate
python3 setup.py install

# Now pdftotext must be broken because of poppler, follow these steps:
sudo apt-get install build-essential libpoppler-cpp-dev pkg-config python-dev
pip3 install pdftotext
python3 setup.py install
python3 setup.py build

# Launch Tracker
tracker_app no_model

# At this point, you must get an error because trackerdb is not created yet, so let’s create it
sudo -u postgres psql # specify -p 8080 if needed
create database trackerdb;
create user you_user with encrypted password ‘your_password’; # your_user and your_password must match ~/Projects/tracker/tracker/base.py
grant all privileges on database trackerdb to your_user;
\q # to quit psql shell

# Now tracker should run
python3 setup.py install; python3 setup.py build; tracker_app no_model

# Now go to : https://www.tracker.lu/api/v1/auth/register and register with email address specified in ~/Projects/tracker/models.py
